{"ast":null,"code":"var _jsxFileName = \"/home/pavel/react-typescript-projects/react-quiz/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Difficulty, fetchQuizQuestions } from './API';\nimport QuestionCard from './Components/QuestionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\nconst App = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n      //correct\n      const correct = questions[number].correct_answer === answer;\n    }\n  };\n  const nextQuestion = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"REACT QUIZ\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), (gameOver || userAnswers.length === TOTAL_QUESTIONS) && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start\",\n      onClick: startTrivia,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }, this), !loading && !gameOver && /*#__PURE__*/_jsxDEV(QuestionCard, {\n      questionNr: number,\n      totalQuestions: TOTAL_QUESTIONS,\n      question: questions[number].question,\n      answers: questions[number].answers,\n      userAnswer: userAnswers ? userAnswers[number] : undefined,\n      callback: checkAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), !gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: nextQuestion,\n      children: \"Next Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"3vxO9CiM0ITniaGpI+eu+AjXM9U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Difficulty","fetchQuizQuestions","QuestionCard","jsxDEV","_jsxDEV","TOTAL_QUESTIONS","App","_s","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startTrivia","newQuestions","EASY","checkAnswer","e","answer","currentTarget","value","correct","correct_answer","nextQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","onClick","questionNr","totalQuestions","question","answers","userAnswer","undefined","callback","_c","$RefreshReg$"],"sources":["/home/pavel/react-typescript-projects/react-quiz/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Difficulty, fetchQuizQuestions, QuestionState } from './API';\nimport QuestionCard from './Components/QuestionCard';\nconst TOTAL_QUESTIONS = 10;\n\ntype answerObject = {\n    question: string;\n    answer: string;\n    correct: boolean;\n    correctAnswer: string;\n};\n\nconst App = () => {\n    const [loading, setLoading] = useState<boolean>(false);\n    const [questions, setQuestions] = useState<QuestionState[]>([]);\n    const [number, setNumber] = useState(0);\n    const [userAnswers, setUserAnswers] = useState<answerObject[]>([]);\n    const [score, setScore] = useState(0);\n    const [gameOver, setGameOver] = useState(true);\n    const startTrivia = async () => {\n        setLoading(true);\n        setGameOver(false);\n        const newQuestions = await fetchQuizQuestions(\n            TOTAL_QUESTIONS,\n            Difficulty.EASY\n        );\n        setQuestions(newQuestions);\n        setScore(0);\n        setUserAnswers([]);\n        setNumber(0);\n        setLoading(false);\n    };\n    const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n        if (!gameOver) {\n            const answer = e.currentTarget.value;\n            //correct\n            const correct = questions[number].correct_answer === answer;\n        }\n    };\n    const nextQuestion = () => {};\n    return (\n        <div>\n            <h1>REACT QUIZ</h1>\n            {(gameOver || userAnswers.length === TOTAL_QUESTIONS) && (\n                <button className=\"start\" onClick={startTrivia}>\n                    Start\n                </button>\n            )}\n            {!gameOver && <p>Score</p>}\n            {loading && <p>Loading...</p>}\n            {!loading && !gameOver && (\n                <QuestionCard\n                    questionNr={number}\n                    totalQuestions={TOTAL_QUESTIONS}\n                    question={questions[number].question}\n                    answers={questions[number].answers}\n                    userAnswer={userAnswers ? userAnswers[number] : undefined}\n                    callback={checkAnswer}\n                />\n            )}\n            {!gameOver &&\n            !loading &&\n            userAnswers.length === number + 1 &&\n            number !== TOTAL_QUESTIONS - 1 ? (\n                <button onClick={nextQuestion}>Next Question</button>\n            ) : null}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}