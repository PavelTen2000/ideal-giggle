{"ast":null,"code":"var _jsxFileName = \"/home/pavel/react-typescript-projects/react-quiz/src/Components/QuestionCard.tsx\";\nimport React from 'react';\nimport styled from './QuestionCard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionCard = _ref => {\n  let {\n    question,\n    answers,\n    callback,\n    userAnswer,\n    questionNr,\n    totalQuestions\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styled.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: styled.paragraph,\n      children: [\"Question: \", questionNr, \" / \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styled.paragraph,\n      dangerouslySetInnerHTML: {\n        __html: question\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: answers.map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `${styled.button} ${styles.yellow}`,\n          disabled: !!userAnswer,\n          value: answer,\n          onClick: callback,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: answer\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)\n      }, answer, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = QuestionCard;\nexport default QuestionCard;\nvar _c;\n$RefreshReg$(_c, \"QuestionCard\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","QuestionCard","_ref","question","answers","callback","userAnswer","questionNr","totalQuestions","className","wrapper","children","paragraph","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","map","answer","button","styles","yellow","disabled","value","onClick","_c","$RefreshReg$"],"sources":["/home/pavel/react-typescript-projects/react-quiz/src/Components/QuestionCard.tsx"],"sourcesContent":["import React, { FC } from 'react';\nimport { answerObject } from '../App';\nimport styled from './QuestionCard.module.css';\ntype Props = {\n    question: string;\n    answers: string[];\n    callback: (e: React.MouseEvent<HTMLButtonElement>) => void;\n    userAnswer: answerObject | undefined;\n    questionNr: number;\n    totalQuestions: number;\n};\n\nconst QuestionCard: FC<Props> = ({\n    question,\n    answers,\n    callback,\n    userAnswer,\n    questionNr,\n    totalQuestions,\n}) => {\n    return (\n        <div className={styled.wrapper}>\n            <p className={styled.paragraph}>\n                Question: {questionNr} / {totalQuestions}\n            </p>\n            <p\n                className={styled.paragraph}\n                dangerouslySetInnerHTML={{ __html: question }}\n            />\n            <div>\n                {answers.map((answer) => (\n                    <div key={answer}>\n                        <button\n                            className={`${styled.button} ${styles.yellow}`}\n                            disabled={!!userAnswer}\n                            value={answer}\n                            onClick={callback}\n                        >\n                            <span\n                                dangerouslySetInnerHTML={{ __html: answer }}\n                            ></span>\n                        </button>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default QuestionCard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAc,OAAO;AAEjC,OAAOC,MAAM,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU/C,MAAMC,YAAuB,GAAGC,IAAA,IAO1B;EAAA,IAP2B;IAC7BC,QAAQ;IACRC,OAAO;IACPC,QAAQ;IACRC,UAAU;IACVC,UAAU;IACVC;EACJ,CAAC,GAAAN,IAAA;EACG,oBACIF,OAAA;IAAKS,SAAS,EAAEX,MAAM,CAACY,OAAQ;IAAAC,QAAA,gBAC3BX,OAAA;MAAGS,SAAS,EAAEX,MAAM,CAACc,SAAU;MAAAD,QAAA,GAAC,YAClB,EAACJ,UAAU,EAAC,KAAG,EAACC,cAAc;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,eACJhB,OAAA;MACIS,SAAS,EAAEX,MAAM,CAACc,SAAU;MAC5BK,uBAAuB,EAAE;QAAEC,MAAM,EAAEf;MAAS;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFhB,OAAA;MAAAW,QAAA,EACKP,OAAO,CAACe,GAAG,CAAEC,MAAM,iBAChBpB,OAAA;QAAAW,QAAA,eACIX,OAAA;UACIS,SAAS,EAAG,GAAEX,MAAM,CAACuB,MAAO,IAAGC,MAAM,CAACC,MAAO,EAAE;UAC/CC,QAAQ,EAAE,CAAC,CAAClB,UAAW;UACvBmB,KAAK,EAAEL,MAAO;UACdM,OAAO,EAAErB,QAAS;UAAAM,QAAA,eAElBX,OAAA;YACIiB,uBAAuB,EAAE;cAAEC,MAAM,EAAEE;YAAO;UAAE;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ;MAAC,GAVHI,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWX,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACW,EAAA,GAnCI1B,YAAuB;AAqC7B,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}